<?php

namespace App\Models;

use App\Http\Resources\WithSnippetsStepsResource;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use App\Models\Step  ;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Str;
use Laravel\Scout\Searchable;

class Snippet extends Model
{

    //
    /**
     * @var string[]
     */
    protected $fillable = [
        'uuid','title','is_public'
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::created(function (Snippet $snippet){

            $snippet->steps()->create([
                'order'=>1,
                'uuid' => Str::uuid()
            ]);

        });
    }

    /**
     * @param Builder $builder
     * @return Builder
     */
    public function scopeIsPublic(Builder $builder)
    {
        return $builder->where('is_public',true) ;
    }

    /**
     * @param Builder $builder
     * @return Builder
     */
    public function scopeMySnippets(Builder $builder)
    {
        return $builder->where('user_id','=',Auth::user()->id) ;
    }
    /**
     * @return string
     */
    public function getRouteKeyName()
    {
        return 'uuid' ;
    }


    /**
     * @return bool
     */
    public function isMySnippets()
    {
        return $this->user->id === optional(Auth::user())->id;
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function steps()
    {
        return $this->hasMany(Step::class)->orderBy('order','asc') ;
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function user(){
        return $this->belongsTo(User::class) ;
    }
}
